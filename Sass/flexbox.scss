//Experimental  Flexbox features

$flex-product-width: 17.815em; //275px
$flex-product-margin: 3.5em; //Aprox total margin for 3 products based on 1%;

// Set on wrapper elements
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;  
  -moz-box-ordinal-group: $val;     
  -ms-flex-order: $val;     
  -webkit-order: $val;  
  order: $val;
}

//481px - flexbox not on for super small screens
@media (min-width: 30.0625em){ 
  .flexbox { //On body class
    // .col-mid{
    //   max-width: 100%;
    // }
    .col-mid{
      max-width: 100%;
    }
    .prod-feat, #category-page {
      @include flexbox();
      -webkit-flex-flow: row wrap;
      flex-flow: row wrap;
      align-items: flex-start;
      align-content: flex-start;
    }

    .main .product, .main .product > a{
      @include flexbox;
      -webkit-flex-flow: row wrap;
      flex-flow: row wrap;
      -webkit-justify-content: center;
      justify-content: center;
      width: 49%; //If you want them to scale
      max-width: $img-width; // when this is reached the it stops scaling and number of items per row increases
      margin: 0 0.5% 2em;
      dt, dd{ width: 100%; }
      .price, .was{ 
        width: 25%; 
        margin: 0;
      }
    }
    .main .product > a{ width: 100%; margin: 0;}
    .product .col-mid{ max-width: $content-width}
  } 
}
@media (min-width: 48em){ //768px + aside margin
  .flexbox{
    .main .product{
      width: 32%;
    }
    // .prod-feat {
    //   -webkit-justify-content: center;
    //   justify-content: center;
    // }
    #category-page{
      -webkit-justify-content: flex-start;
      justify-content: flex-start;
    }
  }
}
//The point where flexbox nolonger devides the total width by number of products to make the expand to full width. After this it makes the no. of products in a row bigger
//(Products width x number of products per row) + product margin = ~1162px
@media (min-width: (($flex-product-width * 3) + $flex-product-margin)){
  .flexbox{
    .main .product{
      width: $flex-product-width; //if you want them to redraw
    }
  }
}
// @media (min-width: 991px){
//   .flexbox .main .product{
//     width: 24%;
//   }
// }